<div class="form-group">
                <label>LOB Markets</label>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="lobMarkets" id="lobMarketsYes" value="Yes" checked>
                    <label class="form-check-label" for="lobMarketsYes">Yes</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="lobMarkets" id="lobMarketsNo" value="No">
                    <label class="form-check-label" for="lobMarketsNo">No</label>
                </div>
            </div>

def submit():
    # Retrieve form data
    compare_run = request.form.get('compareRun') or 'default_compare'
    current_run = request.form.get('currentRun') or 'default_current'
    measure = request.form.get('measures') or 'default_measure'
    lob_markets = request.form.get('lobMarkets') or 'default_lob'

    # Define the file name
    predefined_name = f"Comparison_{compare_run}_{current_run}_{measure}_{lob_markets}.xlsx"

    # Create a data frame
    data = {
        'Compare Run': [compare_run],
        'Current Run': [current_run],
        'Measures': [measure],
        'LOB Markets': [lob_markets]
    }
    df = pd.DataFrame(data)

    # Save data frame to a temporary file
    temp_file = tempfile.NamedTemporaryFile(delete=False, suffix='.xlsx')
    df.to_excel(temp_file.name, index=False)
    temp_file.close()

    # Send the file to the client with the predefined name
    return send_file(temp_file.name, as_attachment=True, download_name=predefined_name, mimetype='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')



#at top of html compare
{% block content %}
<div id="loading-screen" style="display: none;">
    <div class="spinner-border" role="status">
        <span class="sr-only">Loading...</span>
    </div>
</div>

<script>
    function clearForm(formId) {
        document.getElementById(formId).reset();
    }

    function showLoadingScreen() {
        document.getElementById('loading-screen').style.display = 'block';
    }

    document.addEventListener("DOMContentLoaded", function() {
        const forms = document.querySelectorAll('form');
        forms.forEach(form => {
            form.addEventListener('submit', function(event) {
                showLoadingScreen();
            });
        });
    });
</script>
{% endblock %}



#css
 #loading-screen {
        position: fixed;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        background: rgba(255, 255, 255, 0.8);
        z-index: 9999;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    .spinner-border {
        width: 3rem;
        height: 3rem;
    }


 temp_dir = tempfile.gettempdir()
    file_path = os.path.join(temp_dir, f'Comparison_{compare_run}_{current_run}_{measures}.xlsx')
    df.to_excel(file_path, index=False)

    @after_this_request
    def remove_file(response):
        try:
            os.remove(file_path)
        except Exception as error:
            app.logger.error("Error removing or closing downloaded file handle", error)
        return response

    return send_file(file_path, as_attachment=True, download_name=f'Comparison_{compare_run}_{current_run}_{measures}.xlsx')


function hideLoadingScreen() {
        document.getElementById('loading-screen').style.display = 'none';
    }


<iframe id="file-download" name="file-download" style="display: none;" onload="hideLoadingScreen()"></iframe>

<script>
    function clearForm(formId) {
        document.getElementById(formId).reset();
    }

    function showLoadingScreen(event) {
        document.getElementById('loading-screen').style.display = 'flex';
        
        // Submit the form using JavaScript to control the file download
        event.preventDefault();
        const form = event.target;
        
        const formData = new FormData(form);
        const params = new URLSearchParams(formData).toString();
        const actionUrl = form.action + '?' + params;
        
        // Create an iframe to handle the file download
        const iframe = document.getElementById('file-download');
        iframe.src = actionUrl;
    }

    function hideLoadingScreen() {
        document.getElementById('loading-screen').style.display = 'none';
    }
</script>



<iframe id="file-download" name="file-download" style="display: none;" onload="hideLoadingScreen()"></iframe>

<script>
    function clearForm(formId) {
        document.getElementById(formId).reset();
    }

    function showLoadingScreen() {
        document.getElementById('loading-screen').style.display = 'flex';
    }

    function hideLoadingScreen() {
        document.getElementById('loading-screen').style.display = 'none';
    }

    document.addEventListener("DOMContentLoaded", function() {
        const forms = document.querySelectorAll('form');
        forms.forEach(form => {
            form.addEventListener('submit', function(event) {
                showLoadingScreen();
            });
        });
    });
</script>
